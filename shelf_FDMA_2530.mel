global proc shelf_FDMA_2530 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\"\"\"\nThis script sources the CMI Modeling Checklist from github. It will be used in the FDMA 2530 Shelf that I will give to students at CMI at NMSU. \nThe students will receive the shelf \"shelf_FDMA_2530.mel\" and there will only be one button on it. In future updates I might add more tools. \nIf there are any issues please contact:\n Alexander T. Santiago - github.com/atsantiago\n asanti89@nmsu.edu\n\n \n V1.0\n Only have CMI Modleing Checklist on shelf. (V2.0)\n\"\"\"\n\n\nimport os\nimport sys\nimport urllib.request\nimport tempfile\n\n# Update the following variables with your GitHub information:\nrepository_url = \"https://github.com/Atsantiago/NMSU_Scripts\"\nscript_path = \"cmi_modeling_checklist.py\"\n\n# Check the Maya Python version\nif sys.version_info.major == 2:\n    # Python 2\n    exec_function = execfile\nelse:\n    # Python 3\n    exec_function = exec\n\n# Create a temporary directory to download the script\ntemp_dir = tempfile.mkdtemp()\n\n# Download the script from GitHub\nscript_url = f\"{repository_url}/raw/master/{script_path}\"\nscript_file = os.path.join(temp_dir, os.path.basename(script_path))\n\nurllib.request.urlretrieve(script_url, script_file)\n\n# Source the script in Maya\nmaya_script_path = os.path.join(temp_dir, \"cmi_modeling_checklist.py\")\n\nif os.path.isfile(maya_script_path):\n    with open(maya_script_path, \"r\") as file:\n        script_contents = file.read()\n        exec_function(script_contents, globals())\nelse:\n    print(f\"Failed to locate the script: {maya_script_path}\")\n" 
        -enableBackground 1
        -backgroundColor 0 0.588998 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Checklist" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -overlayLabelColor 0.0889 0.2379 0.0889 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "checkboxOn.png" 
        -image1 "checkboxOn.png" 
        -style "iconOnly" 
        -marginWidth 0
        -marginHeight 1
        -command "\"\"\"\nThis script sources the CMI Modeling Checklist from github. It will be used in the FDMA 2530 Shelf that I will give to students at CMI at NMSU. \nThe students will receive the shelf \"shelf_FDMA_2530.mel\" and there will only be one button on it. In future updates I might add more tools. \nIf there are any issues please contact:\n Alexander T. Santiago - github.com/atsantiago\n asanti89@nmsu.edu\n\n \n V1.0\n Only have CMI Modleing Checklist on shelf. (V2.0)\n\"\"\"\n\n\nimport os\nimport sys\nimport urllib.request\nimport tempfile\n\n# Update the following variables with your GitHub information:\nrepository_url = \"https://github.com/Atsantiago/NMSU_Scripts\"\nscript_path = \"cmi_modeling_checklist.py\"\n\n# Check the Maya Python version\nif sys.version_info.major == 2:\n    # Python 2\n    exec_function = execfile\nelse:\n    # Python 3\n    exec_function = exec\n\n# Create a temporary directory to download the script\ntemp_dir = tempfile.mkdtemp()\n\n# Download the script from GitHub\nscript_url = f\"{repository_url}/raw/master/{script_path}\"\nscript_file = os.path.join(temp_dir, os.path.basename(script_path))\n\nurllib.request.urlretrieve(script_url, script_file)\n\n# Source the script in Maya\nmaya_script_path = os.path.join(temp_dir, \"cmi_modeling_checklist.py\")\n\nif os.path.isfile(maya_script_path):\n    with open(maya_script_path, \"r\") as file:\n        script_contents = file.read()\n        exec_function(script_contents, globals())\nelse:\n    print(f\"Failed to locate the script: {maya_script_path}\")\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;

} 
